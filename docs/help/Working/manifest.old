<?xml version="1.0" encoding="utf-8"?>
<topics>
  <topic id="N:Gemstone.Expressions" type="API" />
  <topic id="T:Gemstone.Expressions.RuntimeCompiler" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.RuntimeCompiler" type="API" />
  <topic id="M:Gemstone.Expressions.RuntimeCompiler.Compile(System.String,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions,System.String)" type="API" />
  <topic id="T:Gemstone.Expressions.StaticDynamic" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.StaticDynamic" type="API" />
  <topic id="M:Gemstone.Expressions.StaticDynamic.#ctor(System.Type)" type="API" />
  <topic id="M:Gemstone.Expressions.StaticDynamic.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)" type="API" />
  <topic id="M:Gemstone.Expressions.StaticDynamic.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)" type="API" />
  <topic id="N:Gemstone.Expressions.Evaluator" type="API" />
  <topic id="T:Gemstone.Expressions.Evaluator.ExpressionCompiler" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Evaluator.ExpressionCompiler" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Evaluator.ExpressionCompiler" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler.#ctor(System.String)" type="API" />
  <topic id="T:Gemstone.Expressions.Evaluator.ExpressionCompiler`1" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Evaluator.ExpressionCompiler`1" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Evaluator.ExpressionCompiler`1" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.ExecuteAction" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.ExecuteFunction" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.#ctor(System.String)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.CompiledAction" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.CompiledFunction" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.ExecuteAction" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`1.ExecuteFunction" type="API" />
  <topic id="T:Gemstone.Expressions.Evaluator.ExpressionCompiler`2" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Evaluator.ExpressionCompiler`2" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Evaluator.ExpressionCompiler`2" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.#ctor(System.String)" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.Compile(System.Boolean)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.CompiledAction" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.CompiledExpression" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.CompiledFunction" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.ExecuteAction(`1)" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.ExecuteFunction(`1)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.Expression" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.InstanceParameterType" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.ToString" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.ExpressionCompiler`2.TypeRegistry" type="API" />
  <topic id="T:Gemstone.Expressions.Evaluator.Symbol" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Evaluator.Symbol" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Evaluator.Symbol" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.Symbol.#ctor" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.Symbol.#ctor(System.String,System.Type)" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.Symbol.#ctor(System.String,System.Type,System.Object)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.Symbol.Name" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.Symbol.Type" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.Symbol.Value" type="API" />
  <topic id="T:Gemstone.Expressions.Evaluator.TypeRegistry" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Evaluator.TypeRegistry" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Evaluator.TypeRegistry" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.TypeRegistry.GetContextType" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.TypeRegistry.GetNewContext" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.TypeRegistry.Item" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.TypeRegistry.RegisterSymbol" type="API" />
  <topic id="Overload:Gemstone.Expressions.Evaluator.TypeRegistry.RegisterType" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.#ctor" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.Assemblies" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.Clone" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.GeneratedContextTypeCount" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.GetContextType``2" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.GetContextType(System.Type,System.Type)" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.GetNewContext``2" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.GetNewContext(System.Type,System.Type)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.Item(System.String)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.Item(System.String,System.Type)" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.Namespaces" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.RegisteredSymbols" type="API" />
  <topic id="P:Gemstone.Expressions.Evaluator.TypeRegistry.RegisteredTypes" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.RegisterSymbol(Gemstone.Expressions.Evaluator.Symbol)" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.RegisterSymbol``1(System.String,``0)" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.RegisterType``1" type="API" />
  <topic id="M:Gemstone.Expressions.Evaluator.TypeRegistry.RegisterType(System.Type)" type="API" />
  <topic id="N:Gemstone.Expressions.Model" type="API" />
  <topic id="T:Gemstone.Expressions.Model.DefaultValueExpressionAttribute" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.DefaultValueExpressionAttribute" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.DefaultValueExpressionAttribute" type="API" />
  <topic id="M:Gemstone.Expressions.Model.DefaultValueExpressionAttribute.#ctor(System.String)" type="API" />
  <topic id="T:Gemstone.Expressions.Model.EvaluationOrderException" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.EvaluationOrderException" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.EvaluationOrderException" type="API" />
  <topic id="Events.T:Gemstone.Expressions.Model.EvaluationOrderException" type="API" />
  <topic id="M:Gemstone.Expressions.Model.EvaluationOrderException.#ctor(System.String)" type="API" />
  <topic id="T:Gemstone.Expressions.Model.IValueExpressionAttribute" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.IValueExpressionAttribute" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.IValueExpressionAttribute" type="API" />
  <topic id="P:Gemstone.Expressions.Model.IValueExpressionAttribute.Cached" type="API" />
  <topic id="P:Gemstone.Expressions.Model.IValueExpressionAttribute.EvaluationOrder" type="API" />
  <topic id="P:Gemstone.Expressions.Model.IValueExpressionAttribute.Expression" type="API" />
  <topic id="M:Gemstone.Expressions.Model.IValueExpressionAttribute.GetExpressionUpdateValue(System.Reflection.PropertyInfo)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.IValueExpressionAttribute.GetPropertyUpdateValue(System.Reflection.PropertyInfo)" type="API" />
  <topic id="P:Gemstone.Expressions.Model.IValueExpressionAttribute.TypeRegistry" type="API" />
  <topic id="T:Gemstone.Expressions.Model.IValueExpressionScope`1" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.IValueExpressionScope`1" type="API" />
  <topic id="P:Gemstone.Expressions.Model.IValueExpressionScope`1.Instance" type="API" />
  <topic id="T:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute" type="API" />
  <topic id="M:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute.#ctor(System.String,System.Type)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute.GetExpressionUpdateValue(System.Reflection.PropertyInfo)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute.GetPropertyUpdateValue(System.Reflection.PropertyInfo)" type="API" />
  <topic id="P:Gemstone.Expressions.Model.TypeConvertedValueExpressionAttribute.ReturnType" type="API" />
  <topic id="T:Gemstone.Expressions.Model.UpdateValueExpressionAttribute" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.UpdateValueExpressionAttribute" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.UpdateValueExpressionAttribute" type="API" />
  <topic id="M:Gemstone.Expressions.Model.UpdateValueExpressionAttribute.#ctor(System.String)" type="API" />
  <topic id="T:Gemstone.Expressions.Model.ValueExpressionAttributeBase" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.ValueExpressionAttributeBase" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.ValueExpressionAttributeBase" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionAttributeBase.#ctor(System.String)" type="API" />
  <topic id="P:Gemstone.Expressions.Model.ValueExpressionAttributeBase.Cached" type="API" />
  <topic id="P:Gemstone.Expressions.Model.ValueExpressionAttributeBase.EvaluationOrder" type="API" />
  <topic id="P:Gemstone.Expressions.Model.ValueExpressionAttributeBase.Expression" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionAttributeBase.GetExpressionUpdateValue(System.Reflection.PropertyInfo)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionAttributeBase.GetPropertyUpdateValue(System.Reflection.PropertyInfo)" type="API" />
  <topic id="P:Gemstone.Expressions.Model.ValueExpressionAttributeBase.TypeRegistry" type="API" />
  <topic id="T:Gemstone.Expressions.Model.ValueExpressionParser" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.ValueExpressionParser" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.ValueExpressionParser" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser.#ctor" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser.#ctor(Gemstone.Expressions.Model.IValueExpressionAttribute,System.Reflection.PropertyInfo)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser.#ctor(System.String)" type="API" />
  <topic id="P:Gemstone.Expressions.Model.ValueExpressionParser.DefaultTypeRegistry" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser.DeriveExpression(System.String,Gemstone.Expressions.Model.IValueExpressionAttribute,System.Reflection.MemberInfo,System.String)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser.HasThisKeywords(System.String)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser.ReplaceThisKeywords(System.String,System.String)" type="API" />
  <topic id="T:Gemstone.Expressions.Model.ValueExpressionParser`1" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.ValueExpressionParser`1" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.ValueExpressionParser`1" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.#ctor" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.ApplyDefaults" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.ApplyDefaultsForType" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.CreateInstance" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.CreateInstanceForType" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateExpressions" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateExpressionsForType" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateInstance" type="API" />
  <topic id="Overload:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateInstanceForType" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.#ctor(Gemstone.Expressions.Model.IValueExpressionAttribute,System.Reflection.PropertyInfo)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.#ctor(System.String)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.ApplyDefaults(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.ApplyDefaults``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.ApplyDefaultsForType``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.ApplyDefaultsForType``2(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.CreateInstance(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.CreateInstance``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.CreateInstanceForType``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.CreateInstanceForType``2(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.InitializeType" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.Parse(System.Linq.Expressions.ParameterExpression,Gemstone.Expressions.Evaluator.TypeRegistry,System.Boolean)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateExpressions(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateExpressions``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateExpressionsForType``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateExpressionsForType``2(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateInstance(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateInstance``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateInstanceForType``1(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateInstanceForType``2(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionParser`1.UpdateProperties(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},Gemstone.Expressions.Evaluator.TypeRegistry)" type="API" />
  <topic id="T:Gemstone.Expressions.Model.ValueExpressionScopeBase`1" type="API" />
  <topic id="Methods.T:Gemstone.Expressions.Model.ValueExpressionScopeBase`1" type="API" />
  <topic id="Properties.T:Gemstone.Expressions.Model.ValueExpressionScopeBase`1" type="API" />
  <topic id="M:Gemstone.Expressions.Model.ValueExpressionScopeBase`1.#ctor" type="API" />
  <topic id="P:Gemstone.Expressions.Model.ValueExpressionScopeBase`1.Instance" type="API" />
</topics>